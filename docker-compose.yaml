# Use root/example as user/password credentials
version: '3.4'

services:
  geth:
    image: ethereum/client-go:latest
    ports:
      - 8545:8545
    volumes:
    - "./datadirs/test2:/root/datadir"
    - "./datadirs/test:/root/test"
    # entrypoint: geth --datadir /root/datadir import /root/test 
    entrypoint: geth --datadir /root/datadir --http --http.addr '0.0.0.0' --http.corsdomain '*' --http.port 8545 --http.api 'ersonal,admin,db,eth,net,web3,miner,shh,txpool,debug' --http.vhosts=* --syncmode full

    # entrypoint: geth --datadir /root/datadir import /root/test && geth --datadir /root/datadir --http --http.addr '0.0.0.0' --http.corsdomain '*' --http.port 8545 --http.api 'ersonal,admin,db,eth,net,web3,miner,shh,txpool,debug' --http.vhosts=* --syncmode full

    # entrypoint: geth --datadir /root/datadir  --http --http.addr '0.0.0.0' --http.corsdomain '*' --http.port 8545 --http.api 'ersonal,admin,db,eth,net,web3,miner,shh,txpool,debug' --http.vhosts=* --syncmode full --networkid 1234 import /root/test

  # db:
  #   depends_on:
  #     - geth
  #   image: postgres:14
  #   restart: always
  #   container_name: 'postgres'
  #   environment:
  #       POSTGRES_PASSWORD: ''
  #       POSTGRES_USER: 'postgres'
  #       POSTGRES_HOST_AUTH_METHOD: 'trust'
  #   ports:
  #     - 7432:5432

  # blockscout:
  #   depends_on:
  #     - db
  #   image: blockscout/blockscout:${DOCKER_TAG:-latest}
  #   restart: always
  #   container_name: 'blockscout'
  #   links:
  #     - db:database
  #   command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   env_file:
  #     -  ./envs/common-blockscout.env
  #   environment:
  #       ETHEREUM_JSONRPC_VARIANT: 'geth'
  #       ETHEREUM_JSONRPC_HTTP_URL: http://geth:8545/
  #       ETHEREUM_JSONRPC_WS_URL: ws://geth:8546/
  #       INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
  #       DATABASE_URL: postgresql://postgres:@host.docker.internal:7432/blockscout?ssl=false
  #       ECTO_USE_SSL: 'false'
  #       SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
  #       CHAIN_ID: '1337'
  #   ports:
  #     - 4000:4000



  # docker run -d --net=host --name {{inventory_hostname}} -p {{port}}:{{port}} -v $(pwd):/root ethereum/client-go --datadir /root --bootnodes {{hostvars[groups['bootnode'][0]]['bootnodeURL']}} --port {{port}} --networkid {{chainID}} --unlock {{unlock_account}} --password /root/pwd --mine --miner.etherbase {{unlock_account}} --syncmode full --http --http.addr '0.0.0.0' --http.corsdomain '*' --http.port {{ wsport|int - 1 }} --http.api 'ersonal,admin,db,eth,net,web3,miner,shh,txpool,debug' --ws --ws.addr 0.0.0.0 --ws.port {{ wsport }} --ws.origins '*' --ws.api personal,admin,db,eth,net,web3,miner,shh,txpool,debug --allow-insecure-unlock